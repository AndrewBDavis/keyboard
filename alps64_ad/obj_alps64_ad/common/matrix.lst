   1               		.file	"matrix.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_rows,"ax",@progbits
  11               		.weak	matrix_rows
  13               	matrix_rows:
  14               	.LFB16:
  15               		.cfi_startproc
  16               	/* prologue: function */
  17               	/* frame size = 0 */
  18               	/* stack size = 0 */
  19               	.L__stack_usage = 0
  20 0000 88E0      		ldi r24,lo8(8)
  21 0002 0895      		ret
  22               		.cfi_endproc
  23               	.LFE16:
  25               		.section	.text.matrix_cols,"ax",@progbits
  26               		.weak	matrix_cols
  28               	matrix_cols:
  29               	.LFB2:
  30               		.file 1 "../../tmk_core/common/matrix.c"
   1:../../tmk_core/common/matrix.c **** /*
   2:../../tmk_core/common/matrix.c **** Copyright 2016 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/matrix.c **** 
   4:../../tmk_core/common/matrix.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/matrix.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/matrix.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/matrix.c **** (at your option) any later version.
   8:../../tmk_core/common/matrix.c **** 
   9:../../tmk_core/common/matrix.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/matrix.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/matrix.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/matrix.c **** GNU General Public License for more details.
  13:../../tmk_core/common/matrix.c **** 
  14:../../tmk_core/common/matrix.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/matrix.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/matrix.c **** */
  17:../../tmk_core/common/matrix.c **** #include "print.h"
  18:../../tmk_core/common/matrix.c **** #include "matrix.h"
  19:../../tmk_core/common/matrix.c **** 
  20:../../tmk_core/common/matrix.c **** 
  21:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  22:../../tmk_core/common/matrix.c **** uint8_t matrix_rows(void)
  23:../../tmk_core/common/matrix.c **** {
  24:../../tmk_core/common/matrix.c ****     return MATRIX_ROWS;
  25:../../tmk_core/common/matrix.c **** }
  26:../../tmk_core/common/matrix.c **** 
  27:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  28:../../tmk_core/common/matrix.c **** uint8_t matrix_cols(void)
  29:../../tmk_core/common/matrix.c **** {
  31               		.loc 1 29 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  30:../../tmk_core/common/matrix.c ****     return MATRIX_COLS;
  31:../../tmk_core/common/matrix.c **** }
  37               		.loc 1 31 0
  38 0000 88E0      		ldi r24,lo8(8)
  39 0002 0895      		ret
  40               		.cfi_endproc
  41               	.LFE2:
  43               		.section	.text.matrix_clear,"ax",@progbits
  44               		.weak	matrix_clear
  46               	matrix_clear:
  47               	.LFB14:
  48               		.cfi_startproc
  49               	/* prologue: function */
  50               	/* frame size = 0 */
  51               	/* stack size = 0 */
  52               	.L__stack_usage = 0
  53 0000 0895      		ret
  54               		.cfi_endproc
  55               	.LFE14:
  57               		.section	.text.matrix_setup,"ax",@progbits
  58               		.weak	matrix_setup
  60               	matrix_setup:
  61               	.LFB12:
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67 0000 0895      		ret
  68               		.cfi_endproc
  69               	.LFE12:
  71               		.section	.text.matrix_is_on,"ax",@progbits
  72               		.weak	matrix_is_on
  74               	matrix_is_on:
  75               	.LFB5:
  32:../../tmk_core/common/matrix.c **** 
  33:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  34:../../tmk_core/common/matrix.c **** void matrix_clear(void)
  35:../../tmk_core/common/matrix.c **** {
  36:../../tmk_core/common/matrix.c **** }
  37:../../tmk_core/common/matrix.c **** 
  38:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  39:../../tmk_core/common/matrix.c **** void matrix_setup(void) {}
  40:../../tmk_core/common/matrix.c **** 
  41:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  42:../../tmk_core/common/matrix.c **** bool matrix_is_on(uint8_t row, uint8_t col)
  43:../../tmk_core/common/matrix.c **** {
  76               		.loc 1 43 0
  77               		.cfi_startproc
  78               	.LVL0:
  79               		.loc 1 43 0
  80 0000 CF93      		push r28
  81               	.LCFI0:
  82               		.cfi_def_cfa_offset 3
  83               		.cfi_offset 28, -2
  84               	/* prologue: function */
  85               	/* frame size = 0 */
  86               	/* stack size = 1 */
  87               	.L__stack_usage = 1
  88 0002 C62F      		mov r28,r22
  44:../../tmk_core/common/matrix.c ****     return (matrix_get_row(row) & (1<<col));
  89               		.loc 1 44 0
  90 0004 0E94 0000 		call matrix_get_row
  91               	.LVL1:
  92 0008 21E0      		ldi r18,lo8(1)
  93 000a 30E0      		ldi r19,0
  94 000c 00C0      		rjmp 2f
  95               		1:
  96 000e 220F      		lsl r18
  97 0010 331F      		rol r19
  98               		2:
  99 0012 CA95      		dec r28
 100 0014 02F4      		brpl 1b
 101 0016 90E0      		ldi r25,0
 102 0018 2823      		and r18,r24
 103 001a 3923      		and r19,r25
 104 001c 81E0      		ldi r24,lo8(1)
 105 001e 232B      		or r18,r19
 106 0020 01F4      		brne .L6
 107 0022 80E0      		ldi r24,0
 108               	.L6:
 109               	/* epilogue start */
  45:../../tmk_core/common/matrix.c **** }
 110               		.loc 1 45 0
 111 0024 CF91      		pop r28
 112               	.LVL2:
 113 0026 0895      		ret
 114               		.cfi_endproc
 115               	.LFE5:
 117               		.section	.rodata.str1.1,"aMS",@progbits,1
 118               	.LC0:
 119 0000 00        		.string	""
 120               		.section	.text.matrix_print,"ax",@progbits
 121               		.weak	matrix_print
 123               	matrix_print:
 124               	.LFB6:
  46:../../tmk_core/common/matrix.c **** 
  47:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  48:../../tmk_core/common/matrix.c **** void matrix_print(void)
  49:../../tmk_core/common/matrix.c **** {
 125               		.loc 1 49 0
 126               		.cfi_startproc
 127 0000 EF92      		push r14
 128               	.LCFI1:
 129               		.cfi_def_cfa_offset 3
 130               		.cfi_offset 14, -2
 131 0002 FF92      		push r15
 132               	.LCFI2:
 133               		.cfi_def_cfa_offset 4
 134               		.cfi_offset 15, -3
 135 0004 0F93      		push r16
 136               	.LCFI3:
 137               		.cfi_def_cfa_offset 5
 138               		.cfi_offset 16, -4
 139 0006 1F93      		push r17
 140               	.LCFI4:
 141               		.cfi_def_cfa_offset 6
 142               		.cfi_offset 17, -5
 143 0008 CF93      		push r28
 144               	.LCFI5:
 145               		.cfi_def_cfa_offset 7
 146               		.cfi_offset 28, -6
 147 000a DF93      		push r29
 148               	.LCFI6:
 149               		.cfi_def_cfa_offset 8
 150               		.cfi_offset 29, -7
 151               	/* prologue: function */
 152               	/* frame size = 0 */
 153               	/* stack size = 6 */
 154               	.L__stack_usage = 6
  50:../../tmk_core/common/matrix.c **** #if (MATRIX_COLS <= 8)
  51:../../tmk_core/common/matrix.c ****     print("r/c 01234567\n");
 155               		.loc 1 51 0
 156 000c 80E0      		ldi r24,lo8(__c.1848)
 157 000e 90E0      		ldi r25,hi8(__c.1848)
 158 0010 0E94 0000 		call xputs
 159 0014 C0E0      		ldi r28,0
 160 0016 D0E0      		ldi r29,0
 161               	.LBB2:
  52:../../tmk_core/common/matrix.c **** #elif (MATRIX_COLS <= 16)
  53:../../tmk_core/common/matrix.c ****     print("r/c 0123456789ABCDEF\n");
  54:../../tmk_core/common/matrix.c **** #elif (MATRIX_COLS <= 32)
  55:../../tmk_core/common/matrix.c ****     print("r/c 0123456789ABCDEF0123456789ABCDEF\n");
  56:../../tmk_core/common/matrix.c **** #endif
  57:../../tmk_core/common/matrix.c **** 
  58:../../tmk_core/common/matrix.c ****     for (uint8_t row = 0; row < MATRIX_ROWS; row++) {
  59:../../tmk_core/common/matrix.c **** 
  60:../../tmk_core/common/matrix.c **** #if (MATRIX_COLS <= 8)
  61:../../tmk_core/common/matrix.c ****         xprintf("%02X: %08b%s\n", row, bitrev(matrix_get_row(row)),
 162               		.loc 1 61 0
 163 0018 80E0      		ldi r24,lo8(.LC0)
 164 001a E82E      		mov r14,r24
 165 001c 80E0      		ldi r24,hi8(.LC0)
 166 001e F82E      		mov r15,r24
 167 0020 00E0      		ldi r16,lo8(__c.1851)
 168 0022 10E0      		ldi r17,hi8(__c.1851)
 169               	.L9:
 170               		.loc 1 61 0 is_stmt 0 discriminator 3
 171 0024 8C2F      		mov r24,r28
 172 0026 0E94 0000 		call matrix_get_row
 173 002a 0E94 0000 		call bitrev
 174 002e FF92      		push r15
 175               	.LCFI7:
 176               		.cfi_def_cfa_offset 9
 177 0030 EF92      		push r14
 178               	.LCFI8:
 179               		.cfi_def_cfa_offset 10
 180 0032 1F92      		push __zero_reg__
 181               	.LCFI9:
 182               		.cfi_def_cfa_offset 11
 183 0034 8F93      		push r24
 184               	.LCFI10:
 185               		.cfi_def_cfa_offset 12
 186 0036 DF93      		push r29
 187               	.LCFI11:
 188               		.cfi_def_cfa_offset 13
 189 0038 CF93      		push r28
 190               	.LCFI12:
 191               		.cfi_def_cfa_offset 14
 192 003a 1F93      		push r17
 193               	.LCFI13:
 194               		.cfi_def_cfa_offset 15
 195 003c 0F93      		push r16
 196               	.LCFI14:
 197               		.cfi_def_cfa_offset 16
 198 003e 0E94 0000 		call __xprintf
 199 0042 2196      		adiw r28,1
  58:../../tmk_core/common/matrix.c **** 
 200               		.loc 1 58 0 is_stmt 1 discriminator 3
 201 0044 8DB7      		in r24,__SP_L__
 202 0046 9EB7      		in r25,__SP_H__
 203 0048 0896      		adiw r24,8
 204 004a 0FB6      		in __tmp_reg__,__SREG__
 205 004c F894      		cli
 206 004e 9EBF      		out __SP_H__,r25
 207 0050 0FBE      		out __SREG__,__tmp_reg__
 208 0052 8DBF      		out __SP_L__,r24
 209               	.LCFI15:
 210               		.cfi_def_cfa_offset 8
 211 0054 C830      		cpi r28,8
 212 0056 D105      		cpc r29,__zero_reg__
 213 0058 01F4      		brne .L9
 214               	/* epilogue start */
 215               	.LBE2:
  62:../../tmk_core/common/matrix.c **** #elif (MATRIX_COLS <= 16)
  63:../../tmk_core/common/matrix.c ****         xprintf("%02X: %016b%s\n", row, bitrev16(matrix_get_row(row)),
  64:../../tmk_core/common/matrix.c **** #elif (MATRIX_COLS <= 32)
  65:../../tmk_core/common/matrix.c ****         xprintf("%02X: %032b%s\n", row, bitrev32(matrix_get_row(row)),
  66:../../tmk_core/common/matrix.c **** #endif
  67:../../tmk_core/common/matrix.c **** #ifdef MATRIX_HAS_GHOST
  68:../../tmk_core/common/matrix.c ****         matrix_has_ghost_in_row(row) ?  " <ghost" : ""
  69:../../tmk_core/common/matrix.c **** #else
  70:../../tmk_core/common/matrix.c ****         ""
  71:../../tmk_core/common/matrix.c **** #endif
  72:../../tmk_core/common/matrix.c ****         );
  73:../../tmk_core/common/matrix.c ****     }
  74:../../tmk_core/common/matrix.c **** }
 216               		.loc 1 74 0
 217 005a DF91      		pop r29
 218 005c CF91      		pop r28
 219 005e 1F91      		pop r17
 220 0060 0F91      		pop r16
 221 0062 FF90      		pop r15
 222 0064 EF90      		pop r14
 223 0066 0895      		ret
 224               		.cfi_endproc
 225               	.LFE6:
 227               		.section	.text.matrix_power_up,"ax",@progbits
 228               		.weak	matrix_power_up
 230               	matrix_power_up:
 231               	.LFB10:
 232               		.cfi_startproc
 233               	/* prologue: function */
 234               	/* frame size = 0 */
 235               	/* stack size = 0 */
 236               	.L__stack_usage = 0
 237 0000 0895      		ret
 238               		.cfi_endproc
 239               	.LFE10:
 241               		.section	.text.matrix_power_down,"ax",@progbits
 242               		.weak	matrix_power_down
 244               	matrix_power_down:
 245               	.LFB8:
  75:../../tmk_core/common/matrix.c **** 
  76:../../tmk_core/common/matrix.c **** #ifdef MATRIX_HAS_GHOST
  77:../../tmk_core/common/matrix.c **** __attribute__ ((weak))
  78:../../tmk_core/common/matrix.c **** bool matrix_has_ghost_in_row(uint8_t row)
  79:../../tmk_core/common/matrix.c **** {
  80:../../tmk_core/common/matrix.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  81:../../tmk_core/common/matrix.c ****     // No ghost exists when less than 2 keys are down on the row
  82:../../tmk_core/common/matrix.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  83:../../tmk_core/common/matrix.c ****         return false;
  84:../../tmk_core/common/matrix.c **** 
  85:../../tmk_core/common/matrix.c ****     // Ghost occurs when the row shares column line with other row
  86:../../tmk_core/common/matrix.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  87:../../tmk_core/common/matrix.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  88:../../tmk_core/common/matrix.c ****             return true;
  89:../../tmk_core/common/matrix.c ****     }
  90:../../tmk_core/common/matrix.c ****     return false;
  91:../../tmk_core/common/matrix.c **** }
  92:../../tmk_core/common/matrix.c **** #endif
  93:../../tmk_core/common/matrix.c **** 
  94:../../tmk_core/common/matrix.c **** __attribute__ ((weak)) void matrix_power_up(void) {}
  95:../../tmk_core/common/matrix.c **** __attribute__ ((weak)) void matrix_power_down(void) {}
 246               		.loc 1 95 0
 247               		.cfi_startproc
 248               	/* prologue: function */
 249               	/* frame size = 0 */
 250               	/* stack size = 0 */
 251               	.L__stack_usage = 0
 252 0000 0895      		ret
 253               		.cfi_endproc
 254               	.LFE8:
 256               		.section	.progmem.data.__c.1851,"a",@progbits
 259               	__c.1851:
 260 0000 2530 3258 		.string	"%02X: %08b%s\n"
 260      3A20 2530 
 260      3862 2573 
 260      0A00 
 261               		.section	.progmem.data.__c.1848,"a",@progbits
 264               	__c.1848:
 265 0000 722F 6320 		.string	"r/c 01234567\n"
 265      3031 3233 
 265      3435 3637 
 265      0A00 
 266               		.text
 267               	.Letext0:
 268               		.file 2 "/usr/lib/avr/include/stdint.h"
 269               		.file 3 "../../tmk_core/common/matrix.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 matrix.c
     /tmp/cckMuY1w.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cckMuY1w.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cckMuY1w.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cckMuY1w.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cckMuY1w.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cckMuY1w.s:13     .text.matrix_rows:0000000000000000 matrix_rows
     /tmp/cckMuY1w.s:28     .text.matrix_cols:0000000000000000 matrix_cols
     /tmp/cckMuY1w.s:46     .text.matrix_clear:0000000000000000 matrix_clear
     /tmp/cckMuY1w.s:60     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/cckMuY1w.s:74     .text.matrix_is_on:0000000000000000 matrix_is_on
     /tmp/cckMuY1w.s:123    .text.matrix_print:0000000000000000 matrix_print
     /tmp/cckMuY1w.s:264    .progmem.data.__c.1848:0000000000000000 __c.1848
     /tmp/cckMuY1w.s:259    .progmem.data.__c.1851:0000000000000000 __c.1851
     /tmp/cckMuY1w.s:230    .text.matrix_power_up:0000000000000000 matrix_power_up
     /tmp/cckMuY1w.s:244    .text.matrix_power_down:0000000000000000 matrix_power_down

UNDEFINED SYMBOLS
matrix_get_row
xputs
bitrev
__xprintf
__do_copy_data
