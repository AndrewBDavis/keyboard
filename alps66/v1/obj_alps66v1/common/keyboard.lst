   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_setup,"ax",@progbits
  11               	.global	keyboard_setup
  13               	keyboard_setup:
  14               	.LFB98:
  15               		.file 1 "../../../tmk_core/common/keyboard.c"
   1:../../../tmk_core/common/keyboard.c **** /*
   2:../../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../../tmk_core/common/keyboard.c **** 
   4:../../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../../tmk_core/common/keyboard.c **** 
   9:../../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../../tmk_core/common/keyboard.c **** 
  14:../../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../../tmk_core/common/keyboard.c **** */
  17:../../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../../../tmk_core/common/keyboard.c **** #endif
  37:../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../../tmk_core/common/keyboard.c **** #endif
  40:../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../../../tmk_core/common/keyboard.c **** #endif
  43:../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../../../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../../../tmk_core/common/keyboard.c **** #endif
  46:../../../tmk_core/common/keyboard.c **** 
  47:../../../tmk_core/common/keyboard.c **** 
  48:../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../../../tmk_core/common/keyboard.c **** {
  51:../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../../../tmk_core/common/keyboard.c ****         return false;
  55:../../../tmk_core/common/keyboard.c **** 
  56:../../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../../../tmk_core/common/keyboard.c ****             return true;
  60:../../../tmk_core/common/keyboard.c ****     }
  61:../../../tmk_core/common/keyboard.c ****     return false;
  62:../../../tmk_core/common/keyboard.c **** }
  63:../../../tmk_core/common/keyboard.c **** #endif
  64:../../../tmk_core/common/keyboard.c **** 
  65:../../../tmk_core/common/keyboard.c **** 
  66:../../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../../tmk_core/common/keyboard.c **** {
  16               		.loc 1 67 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  68:../../../tmk_core/common/keyboard.c ****     matrix_setup();
  22               		.loc 1 68 0
  23 0000 0C94 0000 		jmp matrix_setup
  24               	.LVL0:
  25               		.cfi_endproc
  26               	.LFE98:
  28               		.section	.text.keyboard_init,"ax",@progbits
  29               	.global	keyboard_init
  31               	keyboard_init:
  32               	.LFB99:
  69:../../../tmk_core/common/keyboard.c **** }
  70:../../../tmk_core/common/keyboard.c **** 
  71:../../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../../tmk_core/common/keyboard.c **** {
  33               		.loc 1 72 0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  73:../../../tmk_core/common/keyboard.c ****     timer_init();
  39               		.loc 1 73 0
  40 0000 0E94 0000 		call timer_init
  41               	.LVL1:
  74:../../../tmk_core/common/keyboard.c ****     matrix_init();
  42               		.loc 1 74 0
  43 0004 0E94 0000 		call matrix_init
  44               	.LVL2:
  75:../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../../tmk_core/common/keyboard.c **** #endif
  78:../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../../tmk_core/common/keyboard.c **** #endif
  81:../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../../tmk_core/common/keyboard.c **** #endif
  84:../../../tmk_core/common/keyboard.c **** 
  85:../../../tmk_core/common/keyboard.c **** 
  86:../../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../../tmk_core/common/keyboard.c ****     bootmagic();
  45               		.loc 1 87 0
  46 0008 0C94 0000 		jmp bootmagic
  47               	.LVL3:
  48               		.cfi_endproc
  49               	.LFE99:
  51               		.section	.text.keyboard_task,"ax",@progbits
  52               	.global	keyboard_task
  54               	keyboard_task:
  55               	.LFB100:
  88:../../../tmk_core/common/keyboard.c **** #endif
  89:../../../tmk_core/common/keyboard.c **** 
  90:../../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../../tmk_core/common/keyboard.c **** #endif
  93:../../../tmk_core/common/keyboard.c **** }
  94:../../../tmk_core/common/keyboard.c **** 
  95:../../../tmk_core/common/keyboard.c **** /*
  96:../../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan matrix, light LEDs, ...
  97:../../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../../tmk_core/common/keyboard.c ****  */
  99:../../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../../tmk_core/common/keyboard.c **** {
  56               		.loc 1 100 0
  57               		.cfi_startproc
  58 0000 8F92      		push r8
  59               	.LCFI0:
  60               		.cfi_def_cfa_offset 3
  61               		.cfi_offset 8, -2
  62 0002 9F92      		push r9
  63               	.LCFI1:
  64               		.cfi_def_cfa_offset 4
  65               		.cfi_offset 9, -3
  66 0004 AF92      		push r10
  67               	.LCFI2:
  68               		.cfi_def_cfa_offset 5
  69               		.cfi_offset 10, -4
  70 0006 BF92      		push r11
  71               	.LCFI3:
  72               		.cfi_def_cfa_offset 6
  73               		.cfi_offset 11, -5
  74 0008 CF92      		push r12
  75               	.LCFI4:
  76               		.cfi_def_cfa_offset 7
  77               		.cfi_offset 12, -6
  78 000a DF92      		push r13
  79               	.LCFI5:
  80               		.cfi_def_cfa_offset 8
  81               		.cfi_offset 13, -7
  82 000c EF92      		push r14
  83               	.LCFI6:
  84               		.cfi_def_cfa_offset 9
  85               		.cfi_offset 14, -8
  86 000e FF92      		push r15
  87               	.LCFI7:
  88               		.cfi_def_cfa_offset 10
  89               		.cfi_offset 15, -9
  90 0010 0F93      		push r16
  91               	.LCFI8:
  92               		.cfi_def_cfa_offset 11
  93               		.cfi_offset 16, -10
  94 0012 1F93      		push r17
  95               	.LCFI9:
  96               		.cfi_def_cfa_offset 12
  97               		.cfi_offset 17, -11
  98 0014 CF93      		push r28
  99               	.LCFI10:
 100               		.cfi_def_cfa_offset 13
 101               		.cfi_offset 28, -12
 102 0016 DF93      		push r29
 103               	.LCFI11:
 104               		.cfi_def_cfa_offset 14
 105               		.cfi_offset 29, -13
 106 0018 00D0      		rcall .
 107 001a 00D0      		rcall .
 108 001c 1F92      		push __zero_reg__
 109               	.LCFI12:
 110               		.cfi_def_cfa_offset 19
 111 001e CDB7      		in r28,__SP_L__
 112 0020 DEB7      		in r29,__SP_H__
 113               	.LCFI13:
 114               		.cfi_def_cfa_register 28
 115               	/* prologue: function */
 116               	/* frame size = 5 */
 117               	/* stack size = 17 */
 118               	.L__stack_usage = 17
 119               	.LVL4:
 101:../../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../../tmk_core/common/keyboard.c **** #endif
 105:../../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../../tmk_core/common/keyboard.c **** 
 109:../../../tmk_core/common/keyboard.c ****     matrix_scan();
 120               		.loc 1 109 0
 121 0022 0E94 0000 		call matrix_scan
 122               	.LVL5:
 123 0026 00E0      		ldi r16,lo8(matrix_prev.4897)
 124 0028 10E0      		ldi r17,hi8(matrix_prev.4897)
 125               	.LBB2:
 110:../../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 126               		.loc 1 110 0
 127 002a F12C      		mov r15,__zero_reg__
 128               	.LVL6:
 129               	.L5:
 111:../../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 130               		.loc 1 111 0
 131 002c 8F2D      		mov r24,r15
 132 002e 0E94 0000 		call matrix_get_row
 133               	.LVL7:
 134 0032 4C01      		movw r8,r24
 135               	.LVL8:
 112:../../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 136               		.loc 1 112 0
 137 0034 F801      		movw r30,r16
 138 0036 A080      		ld r10,Z
 139 0038 B180      		ldd r11,Z+1
 140 003a A826      		eor r10,r24
 141 003c B926      		eor r11,r25
 142               	.LVL9:
 113:../../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 143               		.loc 1 113 0
 144 003e A114      		cp r10,__zero_reg__
 145 0040 B104      		cpc r11,__zero_reg__
 146 0042 01F4      		brne .L4
 147               	.L11:
 110:../../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 148               		.loc 1 110 0
 149 0044 F394      		inc r15
 150               	.LVL10:
 151 0046 0E5F      		subi r16,-2
 152 0048 1F4F      		sbci r17,-1
 153 004a FAE0      		ldi r31,lo8(10)
 154 004c FF12      		cpse r15,r31
 155 004e 00C0      		rjmp .L5
 156 0050 00C0      		rjmp .L23
 157               	.L4:
 158               	.LBB3:
 114:../../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../../tmk_core/common/keyboard.c ****                  */
 120:../../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../../tmk_core/common/keyboard.c ****                 }
 123:../../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../../tmk_core/common/keyboard.c ****                 continue;
 125:../../../tmk_core/common/keyboard.c ****             }
 126:../../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../../tmk_core/common/keyboard.c **** #endif
 128:../../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 159               		.loc 1 128 0
 160 0052 8091 0000 		lds r24,debug_config
 161 0056 81FD      		sbrc r24,1
 162               		.loc 1 128 0 is_stmt 0 discriminator 1
 163 0058 0E94 0000 		call matrix_print
 164               	.LVL11:
 165               	.L7:
 166               	.LBE3:
 110:../../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 167               		.loc 1 110 0 is_stmt 1 discriminator 1
 168 005c E12C      		mov r14,__zero_reg__
 169 005e CC24      		clr r12
 170 0060 C394      		inc r12
 171 0062 D12C      		mov r13,__zero_reg__
 172               	.LVL12:
 173               	.L10:
 174               	.LBB6:
 175               	.LBB4:
 129:../../../tmk_core/common/keyboard.c ****             matrix_row_t col_mask = 1;
 130:../../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++, col_mask <<= 1) {
 131:../../../tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 176               		.loc 1 131 0
 177 0064 C501      		movw r24,r10
 178 0066 8C21      		and r24,r12
 179 0068 9D21      		and r25,r13
 180 006a 892B      		or r24,r25
 181 006c 01F0      		breq .L8
 182               	.LBB5:
 132:../../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 183               		.loc 1 132 0
 184 006e E982      		std Y+1,r14
 185 0070 FA82      		std Y+2,r15
 186 0072 21E0      		ldi r18,lo8(1)
 187 0074 C401      		movw r24,r8
 188 0076 8C21      		and r24,r12
 189 0078 9D21      		and r25,r13
 190 007a 892B      		or r24,r25
 191 007c 01F4      		brne .L9
 192 007e 20E0      		ldi r18,0
 193               	.L9:
 194 0080 2B83      		std Y+3,r18
 133:../../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 134:../../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & col_mask),
 135:../../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 195               		.loc 1 135 0
 196 0082 0E94 0000 		call timer_read
 197               	.LVL13:
 132:../../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 198               		.loc 1 132 0
 199 0086 8160      		ori r24,1
 200 0088 782F      		mov r23,r24
 201 008a 9D83      		std Y+5,r25
 202 008c 8C83      		std Y+4,r24
 136:../../../tmk_core/common/keyboard.c ****                     };
 137:../../../tmk_core/common/keyboard.c ****                     action_exec(e);
 203               		.loc 1 137 0
 204 008e 4981      		ldd r20,Y+1
 205 0090 5A81      		ldd r21,Y+2
 206 0092 6B81      		ldd r22,Y+3
 207 0094 8D81      		ldd r24,Y+5
 208 0096 0E94 0000 		call action_exec
 209               	.LVL14:
 138:../../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 210               		.loc 1 138 0
 211 009a 4981      		ldd r20,Y+1
 212 009c 5A81      		ldd r21,Y+2
 213 009e 6B81      		ldd r22,Y+3
 214 00a0 7C81      		ldd r23,Y+4
 215 00a2 8D81      		ldd r24,Y+5
 216 00a4 0E94 0000 		call hook_matrix_change
 217               	.LVL15:
 139:../../../tmk_core/common/keyboard.c ****                     // record a processed key
 140:../../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= col_mask;
 218               		.loc 1 140 0
 219 00a8 F801      		movw r30,r16
 220 00aa 8081      		ld r24,Z
 221 00ac 9181      		ldd r25,Z+1
 222 00ae 8C25      		eor r24,r12
 223 00b0 9D25      		eor r25,r13
 224 00b2 9183      		std Z+1,r25
 225 00b4 8083      		st Z,r24
 226               	.L8:
 227               	.LBE5:
 130:../../../tmk_core/common/keyboard.c ****                 if (matrix_change & col_mask) {
 228               		.loc 1 130 0 discriminator 2
 229 00b6 E394      		inc r14
 230               	.LVL16:
 231 00b8 CC0C      		lsl r12
 232 00ba DD1C      		rol r13
 233               	.LVL17:
 234 00bc FAE0      		ldi r31,lo8(10)
 235 00be EF12      		cpse r14,r31
 236 00c0 00C0      		rjmp .L10
 237 00c2 00C0      		rjmp .L11
 238               	.LVL18:
 239               	.L23:
 240               	.LBE4:
 241               	.LBE6:
 242               	.LBE2:
 141:../../../tmk_core/common/keyboard.c **** 
 142:../../../tmk_core/common/keyboard.c ****                     // This can miss stroke when scan matrix takes long like Topre
 143:../../../tmk_core/common/keyboard.c ****                     // process a key per task call
 144:../../../tmk_core/common/keyboard.c ****                     //goto MATRIX_LOOP_END;
 145:../../../tmk_core/common/keyboard.c ****                 }
 146:../../../tmk_core/common/keyboard.c ****             }
 147:../../../tmk_core/common/keyboard.c ****         }
 148:../../../tmk_core/common/keyboard.c ****     }
 149:../../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 150:../../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 243               		.loc 1 150 0
 244 00c4 8FEF      		ldi r24,lo8(-1)
 245 00c6 8983      		std Y+1,r24
 246 00c8 8A83      		std Y+2,r24
 247 00ca 1B82      		std Y+3,__zero_reg__
 248 00cc 0E94 0000 		call timer_read
 249               	.LVL19:
 250 00d0 8160      		ori r24,1
 251 00d2 782F      		mov r23,r24
 252 00d4 9D83      		std Y+5,r25
 253 00d6 8C83      		std Y+4,r24
 254 00d8 4981      		ldd r20,Y+1
 255 00da 5A81      		ldd r21,Y+2
 256 00dc 6B81      		ldd r22,Y+3
 257 00de 8D81      		ldd r24,Y+5
 258 00e0 0E94 0000 		call action_exec
 259               	.LVL20:
 151:../../../tmk_core/common/keyboard.c **** 
 152:../../../tmk_core/common/keyboard.c **** //MATRIX_LOOP_END:
 153:../../../tmk_core/common/keyboard.c **** 
 154:../../../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 260               		.loc 1 154 0
 261 00e4 0E94 0000 		call hook_keyboard_loop
 262               	.LVL21:
 155:../../../tmk_core/common/keyboard.c **** 
 156:../../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 157:../../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 158:../../../tmk_core/common/keyboard.c ****     mousekey_task();
 159:../../../tmk_core/common/keyboard.c **** #endif
 160:../../../tmk_core/common/keyboard.c **** 
 161:../../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 162:../../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 163:../../../tmk_core/common/keyboard.c **** #endif
 164:../../../tmk_core/common/keyboard.c **** 
 165:../../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 166:../../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 167:../../../tmk_core/common/keyboard.c **** #endif
 168:../../../tmk_core/common/keyboard.c **** 
 169:../../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 170:../../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 171:../../../tmk_core/common/keyboard.c **** #endif
 172:../../../tmk_core/common/keyboard.c **** 
 173:../../../tmk_core/common/keyboard.c ****     // update LED
 174:../../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 263               		.loc 1 174 0
 264 00e8 0E94 0000 		call host_keyboard_leds
 265               	.LVL22:
 266 00ec 9091 0000 		lds r25,led_status.4898
 267 00f0 8917      		cp r24,r25
 268 00f2 01F0      		breq .L3
 175:../../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 269               		.loc 1 175 0
 270 00f4 0E94 0000 		call host_keyboard_leds
 271               	.LVL23:
 272 00f8 8093 0000 		sts led_status.4898,r24
 273               	/* epilogue start */
 176:../../../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 177:../../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 178:../../../tmk_core/common/keyboard.c ****     }
 179:../../../tmk_core/common/keyboard.c **** }
 274               		.loc 1 179 0
 275 00fc 0F90      		pop __tmp_reg__
 276 00fe 0F90      		pop __tmp_reg__
 277 0100 0F90      		pop __tmp_reg__
 278 0102 0F90      		pop __tmp_reg__
 279 0104 0F90      		pop __tmp_reg__
 280 0106 DF91      		pop r29
 281 0108 CF91      		pop r28
 282 010a 1F91      		pop r17
 283 010c 0F91      		pop r16
 284 010e FF90      		pop r15
 285               	.LVL24:
 286 0110 EF90      		pop r14
 287 0112 DF90      		pop r13
 288 0114 CF90      		pop r12
 289 0116 BF90      		pop r11
 290 0118 AF90      		pop r10
 291               	.LVL25:
 292 011a 9F90      		pop r9
 293 011c 8F90      		pop r8
 294               	.LVL26:
 177:../../../tmk_core/common/keyboard.c ****     }
 295               		.loc 1 177 0
 296 011e 0C94 0000 		jmp hook_keyboard_leds_change
 297               	.LVL27:
 298               	.L3:
 299               	/* epilogue start */
 300               		.loc 1 179 0
 301 0122 0F90      		pop __tmp_reg__
 302 0124 0F90      		pop __tmp_reg__
 303 0126 0F90      		pop __tmp_reg__
 304 0128 0F90      		pop __tmp_reg__
 305 012a 0F90      		pop __tmp_reg__
 306 012c DF91      		pop r29
 307 012e CF91      		pop r28
 308 0130 1F91      		pop r17
 309 0132 0F91      		pop r16
 310 0134 FF90      		pop r15
 311               	.LVL28:
 312 0136 EF90      		pop r14
 313 0138 DF90      		pop r13
 314 013a CF90      		pop r12
 315 013c BF90      		pop r11
 316 013e AF90      		pop r10
 317               	.LVL29:
 318 0140 9F90      		pop r9
 319 0142 8F90      		pop r8
 320               	.LVL30:
 321 0144 0895      		ret
 322               		.cfi_endproc
 323               	.LFE100:
 325               		.section	.text.keyboard_set_leds,"ax",@progbits
 326               	.global	keyboard_set_leds
 328               	keyboard_set_leds:
 329               	.LFB101:
 180:../../../tmk_core/common/keyboard.c **** 
 181:../../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 182:../../../tmk_core/common/keyboard.c **** {
 330               		.loc 1 182 0
 331               		.cfi_startproc
 332               	.LVL31:
 333               	/* prologue: function */
 334               	/* frame size = 0 */
 335               	/* stack size = 0 */
 336               	.L__stack_usage = 0
 183:../../../tmk_core/common/keyboard.c ****     led_set(leds);
 337               		.loc 1 183 0
 338 0000 0C94 0000 		jmp led_set
 339               	.LVL32:
 340               		.cfi_endproc
 341               	.LFE101:
 343               		.section	.bss.led_status.4898,"aw",@nobits
 346               	led_status.4898:
 347 0000 00        		.zero	1
 348               		.section	.bss.matrix_prev.4897,"aw",@nobits
 351               	matrix_prev.4897:
 352 0000 0000 0000 		.zero	20
 352      0000 0000 
 352      0000 0000 
 352      0000 0000 
 352      0000 0000 
 353               		.text
 354               	.Letext0:
 355               		.file 2 "/usr/lib/avr/include/stdint.h"
 356               		.file 3 "../../../tmk_core/common/keyboard.h"
 357               		.file 4 "../../../tmk_core/common/matrix.h"
 358               		.file 5 "../../../tmk_core/common/debug.h"
 359               		.file 6 "../../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 360               		.file 7 "../../../tmk_core/common/timer.h"
 361               		.file 8 "../../../tmk_core/common/bootmagic.h"
 362               		.file 9 "../../../tmk_core/common/action.h"
 363               		.file 10 "../../../tmk_core/common/hook.h"
 364               		.file 11 "../../../tmk_core/common/host.h"
 365               		.file 12 "../../../tmk_core/common/led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccyjnwCE.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccyjnwCE.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccyjnwCE.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccyjnwCE.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccyjnwCE.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccyjnwCE.s:13     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccyjnwCE.s:31     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccyjnwCE.s:54     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccyjnwCE.s:351    .bss.matrix_prev.4897:0000000000000000 matrix_prev.4897
     /tmp/ccyjnwCE.s:346    .bss.led_status.4898:0000000000000000 led_status.4898
     /tmp/ccyjnwCE.s:328    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
matrix_setup
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
hook_matrix_change
hook_keyboard_loop
host_keyboard_leds
hook_keyboard_leds_change
led_set
__do_clear_bss
